version: "3.3"
services:
    rabbitmq:
        image: rabbitmq:3.6-management-alpine
        ports:
          - 5672:5672
          - 15672:15672
        networks:
          - net
        deploy:
            placement:
                constraints:
                    - node.role == manager

    mongo:
        image: mongo:4.1.8-xenial
        ports:
          - 27017:27017
        volumes:
        - dbdata:/data/db
        networks:
          - net
        deploy:
            placement:
                constraints:
                    - node.role == manager

    cod-to-disk:
        image: 'gcr.io/crystallography-api/containers-cod-to-disk:latest'
        volumes:
          - cod-data:/home/data
        networks:
          - net
        build:
            context: ./
            dockerfile: ./packages/swarm/cod-to-disk/Dockerfile

    disk-to-db:
        image: 'gcr.io/crystallography-api/containers-disk-to-db:latest'
        volumes:
          - cod-data:/home/data
        networks:
          - net
        build:
            context: ./
            dockerfile: ./packages/swarm/disk-to-db/Dockerfile

    web:
        image: 'gcr.io/crystallography-api/containers-crystallography-io-web:latest'
        build:
            context: ./
            dockerfile: ./packages/swarm/cod-web/Dockerfile
        networks:
          - net
          - traefik-public
        environment:
          - PORT=8060
        deploy:
            placement:
                constraints:
                    - node.role == manager
            labels:
                - traefik.enable=true
                - traefik.docker.network=traefik-public
                - traefik.constraint-label=traefik-public
                - traefik.http.routers.web-http.rule=Host(`crystallography.io`)
                - traefik.http.routers.web-http.entrypoints=http
                - traefik.http.routers.web-http.middlewares=https-redirect
                - traefik.http.routers.web-https.priority=10
                - traefik.http.routers.web-https.rule=Host(`crystallography.io`)
                - traefik.http.routers.web-https.entrypoints=https
                - traefik.http.routers.web-https.tls=true
                - traefik.http.routers.web-https.tls.certresolver=le
                - traefik.http.services.web.loadbalancer.server.port=8060

    api:
        image: 'gcr.io/crystallography-api/containers-crystallography-io-api:latest'
        build:
            context: ./
            dockerfile: ./packages/swarm/cod-api/Dockerfile
        networks:
          - net
          - traefik-public
        environment:
          - PORT=8070
        deploy:
            placement:
                constraints:
                    - node.role == manager
            labels:
                - traefik.enable=true
                - traefik.docker.network=traefik-public
                - traefik.constraint-label=traefik-public
                - traefik.http.routers.api-https.rule=(Host(`crystallography.io`) && PathPrefix(`/api`))
                - traefik.http.routers.api-https.entrypoints=https
                - traefik.http.routers.api-https.tls=true
                - traefik.http.routers.api-https.tls.certresolver=le
                - traefik.http.services.api.loadbalancer.server.port=8070


networks:
  net:
  traefik-public:
    external: true

volumes:
    cod-data:
    dbdata:
